name: CI/CD

# запуск CI/CD при пуш в ветку feature и пул-реквесте в ветки main и dev
on:
  push:
    branches:
      - feature
  pull_request:
    branches:
      - main
      - dev

# Работа, которая будет выполняться: сборка (build) и тестирование проекта. Будут запущены на виртуальной машине linux (ubuntu)
jobs:
  build-and-checkstyle-and-testing:
    runs-on: ubuntu-latest

    # Шаги, в которых описывается, что для проверки будут:
    # 1. скачан репозиторий (действие actions/checkout@v3)
    # 2. установлена java (действие actions/setup-java@v3) 11-ой версии
    # 3. проведена проверка стилистики кода (действие mvn checkstyle:check)
    # 4. осуществлена сборка проекта вместе с шагом тестирования (действие mvn clean install)
    # 5. пауза в 3 секунды
    # 6. прогнаны postman тесты (действие matt-ball/newman-action@master)
    steps:
      - name: Клонирование кода репозитория
        uses: actions/checkout@v3
      - name: Установка java 11-ой версии с maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Проверка стилистики (checkstyle)
        run: mvn checkstyle:check -Dcheckstyle.config.location=./checkstyle.xml

      - name: считывание файла application.properties
        run: |
          cat src/main/resources/application.properties >> application.properties
      - name: Запуск postgreSQL через докер-контейнер
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        run: |
          export POSTGRES_DB=$(grep "spring.datasource.url" application.properties | cut -d'=' -f2 | rev | cut -d'/' -f1 | rev)
          export POSTGRES_USER=$(grep "spring.datasource.username" application.properties | awk -F "=" '{print $2}' | tr -d ' ')
          export POSTGRES_PASSWORD=$(grep "spring.datasource.password" application.properties | awk -F "=" '{print $2}' | tr -d ' ')
          docker run --name postgres -e POSTGRES_DB=$POSTGRES_DB -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -p 5432:5432 -d postgres:latest

      - name: Сборка проекта и тестирование
        run: mvn clean install

      - name: Пауза 3с
        run: sleep 3s
        shell: bash

      - name: Запуск приложения на порту 8080
        run: mvn spring-boot:run -Dserver.port=8080 &

      - name: Проход Postman тестов с baseUrl http://localhost:8080
        run: npx newman run ./postman/filmorate.json --env-var baseUrl=http://localhost:8080

      - name: Остановка приложения
        run: mvn spring-boot:stop